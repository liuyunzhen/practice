package com.taotao.manage.interceptor;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.AfterReturning;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.aspectj.lang.reflect.MethodSignature;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * @author lyz
 * @Title: TimerLogInterceptor
 * @Description:
 * @date 2018/8/316:36
 */
@Aspect
@Component
public class CrossDomainJsonpInterceptor {
    private final Logger logger = LoggerFactory.getLogger(CrossDomainJsonpInterceptor.class);
    @Pointcut("execution(* com.taotao.manage.controller..*(..))")
    private void myAspectJMethod(){}

    //@Around("myAspectJMethod()")
    public Object doArround(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {
        long beforeTime = System.currentTimeMillis();
        Object proceed = proceedingJoinPoint.proceed();
        long afterTime = System.currentTimeMillis();
        long times = afterTime - beforeTime;
        if (logger.isInfoEnabled()) {
        	logger.info("统一日志打印:"+ "方法执行时间："+times);
		}
        return proceed;
    }
}
