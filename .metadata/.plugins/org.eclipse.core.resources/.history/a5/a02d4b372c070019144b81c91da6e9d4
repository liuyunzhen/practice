package com.taotao.manage.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import redis.clients.jedis.ShardedJedis;
import redis.clients.jedis.ShardedJedisPool;

@Service
public class RedisService {
	@Autowired
	private ShardedJedisPool shardedJedisPool;
	
	private <T> T excute(Function<T, ShardedJedis> fun){
		ShardedJedis shardedJedis = null;
		try {
			shardedJedis = shardedJedisPool.getResource();
			return fun.callback(shardedJedis);
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
            if (null != shardedJedis) {
                // 关闭，检测连接是否有效，有效则放回到连接池中，无效则重置状态
                shardedJedis.close();
            }
        }
		return null;
	}
	
	public String set(String key, String value){
		return this.excute(new Function<String, ShardedJedis>() {
			@Override
			public String callback(ShardedJedis e) {
				return null;
			}
		});
	}
	
	public String get(String key){
		try {
			ShardedJedis shardedJedis = shardedJedisPool.getResource();
			return shardedJedis.get(key);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

}
