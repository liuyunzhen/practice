<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loan.order.dao.LoanOrderMapper">


    <update id="updateById2StatusDoing">
        UPDATE
        pl_loan_order po
        left
        join (select count(*) o1_count from pl_loan_order o1 where o1.status in (1,2) and o1.credit_id = #{creditId}) abc
        on 1=1
        SET po.status = 1,
        po.back_status = 1,
        po.pay_user_bank_id = #{userBankCardId}

        where po.id = #{loanOrderId}
        and abc.o1_count = 0
        and po.status = 0
        and po.back_status = 0
    </update>

    <select id="searchLoanOrder" parameterType="com.loan.order.dto.order.LoanOrderSearchReq" resultType="com.loan.order.dto.order.LoanOrderSearchResp">
        SELECT
            po.id,
            po.order_code,
            po.user_id,
            pc.user_real_name,
            pc.user_register_phone,
            pc.credit_amt,
            pps.name as 'product_series_name',
            pp.id as 'product_id',
            po.real_amt as 'amount',
            pp.term_days as 'product_term_days',
            porp.real_interest_amount as 'real_interest_amt',
            porp.plan_time as 'plan_refund_time',
            po.create_time,
            po.real_amt as 'real_loan_amt',
            po.loan_time,
            porp.real_date as 'real_refund_date',
            porp.penalty_amount,
            porp.refunded_amount,
            po.status,
            ppt.code as 'trade_code'
        FROM pl_loan_order po
        LEFT JOIN pl_credit pc on po.credit_id = pc.id
        LEFT JOIN pl_product pp on  pp.id = po.product_id
        LEFT JOIN pl_product_series pps on pps.id = pp.series_id
        LEFT JOIN pl_loan_order_refund_plan porp on porp.loan_order_id = po.id
        LEFT JOIN pl_loan_order_refund_record porr on porr.refund_plan_id = porp.id and porr.status = 1
        LEFT JOIN pl_payment_trade ppt on ppt.status = 2 and ppt.biz_type= 1 and ppt.biz_id = porr.id
        WHERE po.status not in (0,7)
        <if test="userName != null and userName != ''">
            AND pc.user_real_name like #{userName,jdbcType=VARCHAR}
        </if>
        <if test="userRegisterPhone != null and userRegisterPhone != ''">
            AND pc.user_register_phone like #{userRegisterPhone,jdbcType=VARCHAR}
        </if>
        <if test="productSeriesId != null">
            AND pp.series_id = #{productSeriesId,jdbcType=BIGINT}
        </if>
        <if test="status != null">
            AND po.status = #{status,jdbcType=INTEGER}
        </if>
        <if test="planRefundTimeLeft != null">
            AND porp.plan_time &gt;= #{planRefundTimeLeft,jdbcType=DATE}
        </if>
        <if test="planRefundTimeRight != null">
            AND porp.plan_time &lt; #{planRefundTimeRight,jdbcType=DATE}
        </if>
        <if test="createTimeLeft != null">
            AND po.create_time &gt;= #{createTimeLeft,jdbcType=DATE}
        </if>
        <if test="createTimeRight != null">
            AND po.create_time &lt; #{createTimeRight,jdbcType=DATE}
        </if>
        <if test="loanTimeLeft != null">
            AND po.loan_time &gt;= #{loanTimeLeft,jdbcType=DATE}
        </if>
        <if test="loanTimeRight != null">
            AND po.loan_time != '0000-00-00 00:00:00' AND po.loan_time &lt; #{loanTimeRight,jdbcType=DATE}
        </if>
        <if test="realRefundDateLeft != null">
            AND porp.real_date &gt;= #{realRefundDateLeft,jdbcType=DATE}
        </if>
        <if test="realRefundDateRight != null">
            AND porp.real_date != '0000-00-00 00:00:00' AND porp.real_date &lt; #{realRefundDateRight,jdbcType=DATE}
        </if>
        <if test="isOverDue != null and isOverDue == true">
            AND porp.status != 2
            AND porp.plan_time is not null AND porp.plan_time &lt; #{currentDate,jdbcType=DATE}
        </if>
        ORDER BY po.create_time DESC
    </select>

    <select id="getOrderDetail" resultType="com.loan.order.dto.order.LoanOrderDetail">
        SELECT
          po.id,
          po.order_code,
          po.create_time,
          po.status,
          po.user_id,
          pc.user_real_name,
          pc.user_register_phone,
          pc.credit_amt,
          pp.id as 'product_id',
          pps.name as 'product_series_name',
          pp.term_days as 'product_term_days',
          pp.interest_rate,
          pp.penalty_day_rate,
          porp.plan_time as 'plan_refund_time',
          po.real_amt as 'real_loan_amt',
          po.loan_time,
          po.refund_type,
          porp.id as 'return_plan_id',
          porp.real_interest_amount as 'real_interest_amt',
          porp.overdue_days,
          porp.real_date as 'real_refund_date',
          porp.penalty_amount,
          ppt.code as 'trade_code'
        FROM pl_loan_order po
        LEFT JOIN pl_credit pc on po.credit_id = pc.id
        LEFT JOIN pl_product pp on  pp.id = po.product_id
        LEFT JOIN pl_product_series pps on pps.id = pp.series_id
        LEFT JOIN pl_loan_order_refund_plan porp on porp.loan_order_id = po.id
        LEFT JOIN pl_loan_order_refund_record porr on porr.refund_plan_id = porp.id and porr.status = 1
        LEFT JOIN pl_payment_trade ppt on ppt.status = 2 and ppt.biz_type= 1 and ppt.biz_id = porr.id
        WHERE po.id = #{orderId,jdbcType=BIGINT}
    </select>

    <select id="queryNonRepaymentLoanOrder" resultType="com.loan.order.entity.LoanOrder">
            select id as loanOrderId,
            status as orderStatus
            from pl_loan_order
            where status in('1','2','4','6')
            and user_id in ${userIds}
    </select>
</mapper>

